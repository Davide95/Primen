<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Primen</name>
    </assembly>
    <members>
        <member name="M:Primen.Program.WelcomeMessage">
            <summary>
            Shows a welcome message with informations about the MPI world.
            </summary>
        </member>
        <member name="M:Primen.Program.readKey">
            <summary>Read the key to factorize from the command line arguments.</summary>
            <returns>Returns the key to factorize.</returns>
        </member>
        <member name="T:Primen.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Primen.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Primen.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Primen.Properties.Resources.Error111">
            <summary>
              Looks up a localized string similar to Error 111: Insert a valid key as a parameter..
            </summary>
        </member>
        <member name="P:Primen.Properties.Resources.Error112">
            <summary>
              Looks up a localized string similar to Error 112: &quot;{0}&quot; is not an integer number..
            </summary>
        </member>
        <member name="P:Primen.Properties.Resources.Error113">
            <summary>
              Looks up a localized string similar to Error 113: &quot;{0}&quot; can&apos;t be factorized..
            </summary>
        </member>
        <member name="P:Primen.Properties.Resources.FactorizationCompletedMessage">
            <summary>
              Looks up a localized string similar to Factors: ({0}; {1})..
            </summary>
        </member>
        <member name="P:Primen.Properties.Resources.NumberOfProcessesMessage">
            <summary>
              Looks up a localized string similar to Total number of processes: {0}..
            </summary>
        </member>
        <member name="P:Primen.Properties.Resources.WelcomeMessage">
            <summary>
              Looks up a localized string similar to Hello, my rank is {0} and I&apos;m running on {1}..
            </summary>
        </member>
        <member name="T:Primen.TrialDivision">
            <summary>
            Implements trial division, an integer factorization algorithm.
            </summary>
        </member>
        <member name="M:Primen.TrialDivision.#ctor(System.Numerics.BigInteger)">
            <summary>
            Initializes a new instance of the <c>TrialDivision</c> class.
            </summary>
            <param name="key">The product of two prime numbers.</param>
        </member>
        <member name="M:Primen.TrialDivision.Factorization">
            <summary>
            Factorizes the key.
            </summary>
            <returns>If it is the root rank it returns one factor, otherwise 0.</returns>
        </member>
        <member name="M:Primen.TrialDivision.MpiFactorization">
            <summary>
            Uses <c>MPI.NET</c> to support parallel computing.
            </summary>
            <returns>If it is the root rank it returns one factor, otherwise 0.</returns>
        </member>
        <member name="M:Primen.TrialDivision.ParallelFactorization(System.Numerics.BigInteger,System.Numerics.BigInteger)">
            <summary>
            Uses <c>Parallel.For</c> to support tasks parallelization.
            </summary>
            <param name="from">The start index, inclusive.</param>
            <param name="to">The end index, exclusive.</param>
            <returns>Returns one factor.</returns>
        </member>
        <member name="M:Primen.TrialDivision.Factorization(System.Numerics.BigInteger,System.Numerics.BigInteger)">
            <summary>Check if there is a factor in [<c>from</c>; <c>to</c>] range.</summary>
            <param name="from">The start index, inclusive.</param>
            <param name="to">The end index, inclusive.</param>
            <returns>Returns one factor.</returns>
        </member>
        <member name="M:Primen.TrialDivision.Factorization(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Threading.Tasks.ParallelLoopState@)">
            <summary>Check if there is a factor in [<c>from</c>; <c>to</c>] range.</summary>
            <param name="from">The start index, inclusive.</param>
            <param name="to">The end index, inclusive.</param>
            <param name="loopState">The <c>ParallelLoopState</c> of the main <c>Parallel.For</c>.</param>
            <returns>Returns one factor.</returns>
        </member>
    </members>
</doc>
